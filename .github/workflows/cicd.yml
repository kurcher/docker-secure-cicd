name: Docker CI/CD

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom tag for image'
        required: true
        default: 'manual-latest'

env:
  IMAGE_NAME: myapp34142

jobs:

  auto_build_and_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tag from commit SHA
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          format: 'table'
          output: 'trivy-report.txt'

      - name: Upload Trivy scan report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-report.txt

      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}


  manual_build_and_push:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tag from input
        run: echo "TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          format: 'table'
          output: 'trivy-report.txt'

      - name: Upload Trivy scan report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-report.txt

      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}





